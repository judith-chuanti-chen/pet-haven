[{"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\index.js":"1","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\App.js":"2","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\serviceWorker.js":"3","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\index.js":"4","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\UserProfile.js":"5","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\NavBar.js":"6","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserLogin.js":"7","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserLogout.js":"8","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\Admin\\EditUsers.js":"9","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\HigherOrderComponents\\MainLayout.js":"10","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Home.js":"11","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\PetDetail.js":"12","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Search.js":"13","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserSignup.js":"14","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\HigherOrderComponents\\auth.js":"15","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\Admin\\index.js":"16","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\users_reducer.js":"17","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\favPets_reducer.js":"18","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\filters_reducer.js":"19","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserUpdate.js":"20","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\FavoritePetHolder.js":"21","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Pagination.js":"22","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\LoadingThumbnails.js":"23","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\actions\\user_actions.js":"24","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\actions\\favPet_actions.js":"25","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\PetThumbnail.js":"26","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\utils\\manageFavoritePet.js":"27","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\SearchBar.js":"28","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\petfinder.js":"29","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Header\\Header.js":"30","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\types.js":"31","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\actions\\filter_actions.js":"32","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Header\\sidenav.js":"33","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Header\\NavItems.js":"34","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\RouteLinks\\RouteLinks.js":"35"},{"size":947,"mtime":1608162153498,"results":"36","hashOfConfig":"37"},{"size":2336,"mtime":1608163695356,"results":"38","hashOfConfig":"37"},{"size":5275,"mtime":1608162153500,"results":"39","hashOfConfig":"37"},{"size":350,"mtime":1608070129187,"results":"40","hashOfConfig":"37"},{"size":3344,"mtime":1608163677384,"results":"41","hashOfConfig":"37"},{"size":932,"mtime":1607629645946,"results":"42","hashOfConfig":"37"},{"size":3687,"mtime":1607922128966,"results":"43","hashOfConfig":"37"},{"size":948,"mtime":1607887040139,"results":"44","hashOfConfig":"37"},{"size":3099,"mtime":1607922128964,"results":"45","hashOfConfig":"37"},{"size":230,"mtime":1607629645940,"results":"46","hashOfConfig":"37"},{"size":1926,"mtime":1608162153487,"results":"47","hashOfConfig":"37"},{"size":7291,"mtime":1608162153490,"results":"48","hashOfConfig":"37"},{"size":2955,"mtime":1608070129177,"results":"49","hashOfConfig":"37"},{"size":12067,"mtime":1608070129180,"results":"50","hashOfConfig":"37"},{"size":1449,"mtime":1608070129168,"results":"51","hashOfConfig":"37"},{"size":146,"mtime":1607629645953,"results":"52","hashOfConfig":"37"},{"size":979,"mtime":1607922133075,"results":"53","hashOfConfig":"37"},{"size":530,"mtime":1607922128971,"results":"54","hashOfConfig":"37"},{"size":924,"mtime":1607887040146,"results":"55","hashOfConfig":"37"},{"size":10964,"mtime":1608162153496,"results":"56","hashOfConfig":"37"},{"size":1890,"mtime":1608162153485,"results":"57","hashOfConfig":"37"},{"size":736,"mtime":1607887040131,"results":"58","hashOfConfig":"37"},{"size":1238,"mtime":1607887040131,"results":"59","hashOfConfig":"37"},{"size":2061,"mtime":1607922133073,"results":"60","hashOfConfig":"37"},{"size":281,"mtime":1607887040143,"results":"61","hashOfConfig":"37"},{"size":2452,"mtime":1608162153493,"results":"62","hashOfConfig":"37"},{"size":916,"mtime":1607922128977,"results":"63","hashOfConfig":"37"},{"size":5492,"mtime":1608070129179,"results":"64","hashOfConfig":"37"},{"size":411,"mtime":1608070129185,"results":"65","hashOfConfig":"37"},{"size":1249,"mtime":1608070129171,"results":"66","hashOfConfig":"37"},{"size":577,"mtime":1607922133077,"results":"67","hashOfConfig":"37"},{"size":874,"mtime":1607629645962,"results":"68","hashOfConfig":"37"},{"size":430,"mtime":1607629645944,"results":"69","hashOfConfig":"37"},{"size":1402,"mtime":1607922128946,"results":"70","hashOfConfig":"37"},{"size":1516,"mtime":1607922128954,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1a45ue7",{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\index.js",[],["155","156"],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\App.js",["157","158","159","160"],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\serviceWorker.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\index.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\UserProfile.js",["161","162","163"],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\NavBar.js",["164","165"],"import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavLink from 'react-bootstrap/NavLink';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst NavBar = () => {\r\n    //Todo: \r\n    // change href to correct routes\r\n    return(\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/home\">Pet Haven</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link><NavLink to=\"./\" />Home</Nav.Link>\r\n                    <NavLink to=\"#my-account\">MyAccount</NavLink> \r\n                </Nav>\r\n                <Nav>\r\n                <Nav.Link><NavLink to=\"/sign-up\">Sign Up</NavLink></Nav.Link>\r\n                    <NavLink to=\"/log-in\">Log In</NavLink>\r\n                </Nav>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserLogin.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserLogout.js",["166"],"import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteFavPet } from '../../store/actions/favPet_actions';\r\nimport { logoutUser } from '../../store/actions/user_actions';\r\n\r\nconst Logout = (props) => {\r\n\r\n    const logout = useSelector(state => state.user);\r\n    const favPets = useSelector(state => state.favPets);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(logoutUser());\r\n        favPets.forEach(petId => dispatch(deleteFavPet(petId)));\r\n    },[dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if(logout.auth === null){\r\n            setTimeout(()=>{\r\n                props.history.push('/')\r\n            },2000)\r\n        }\r\n    },[logout,props])\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"logout_container\">\r\n            <h1>\r\n                Pets will miss you. Sorry to see you go :(\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\Admin\\EditUsers.js",["167","168"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button, Row } from 'react-bootstrap';\r\n\r\n\r\nconst EditUsers = props => {\r\n    const [users, setUsers] = useState([]);\r\n    const history = useHistory();\r\n    const getAllUsers = () => {\r\n        axios.get('/api/users/all')\r\n        .then(res => {\r\n            setUsers(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n\r\n        }).finally(() => {\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.user.auth && props.user.userData.role === 1){\r\n            getAllUsers();\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"row py-5\">\r\n        <div className=\"col-lg-10 mx-auto\">\r\n            <div className=\"card rounded shadow border-0\">\r\n                <div className=\"card-body bg-white rounded\">\r\n                    <div className=\"table-responsive\">\r\n                        <table\r\n                            id=\"example\"\r\n                            className=\"table table-striped table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>UserID</th>\r\n                                    <th>User Email</th>\r\n                                    <th>First Name</th>\r\n                                    <th>Last Name</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user => {\r\n                                    // console.log(Date.parse(url.date));\r\n                                    return (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.firstname}</td>\r\n                                            <td>{user.lastname}</td>\r\n                                            <td>\r\n                                                <Row className=\"d-flex justify-content-center\">\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        size=\"lg\"\r\n                                                        onClick={()=>{console.log(\"click\")}}>\r\n                                                        Remove\r\n                                                    </Button>\r\n                                                </Row>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default EditUsers;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\HigherOrderComponents\\MainLayout.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Home.js",["169","170"],"import React, { useEffect } from 'react';\r\nimport PetThumbnail from './PetThumbnail';\r\nimport SearchBar from './SearchBar';\r\nimport { getAllFavPets } from '../utils/manageFavoritePet';\r\nimport { useDispatch, useSelector  } from 'react-redux';\r\nimport { addFavPet } from '../store/actions/favPet_actions';\r\nimport {Container, Jumbotron, Row, Col} from 'react-bootstrap';\r\n\r\nimport logo from '../dog_cat_logo.png';\r\n\r\nlet homeStyle = {fontFamily: \"Montserrat, sans-serif\"};\r\n\r\nconst Home = () => {\r\n    const user = useSelector(state => state.user);\r\n    const favPets = useSelector(state => state.favPets);\r\n    const dispatch = useDispatch();\r\n    const populateInitialFavPets = () => {\r\n    // Populate initial favPets in the app if user is logged in\r\n        if(!user.auth) return;\r\n        if(favPets.size === 0){\r\n            getAllFavPets(user.userData._id, (petIds) => {\r\n                petIds.forEach(petId => {\r\n                    dispatch(addFavPet(petId));\r\n                });   \r\n            });     \r\n        }\r\n        console.log(\"Populated initial favPets: \");\r\n        console.log(favPets);\r\n    }\r\n\r\n    useEffect(() => {\r\n        populateInitialFavPets();\r\n    }, [user.auth]);\r\n    return(\r\n        <>\r\n            <Jumbotron fluid>\r\n                <Container >\r\n                    <div className=\"home\" style={homeStyle}>\r\n                        <h1>Pet Haven</h1>\r\n                        <p>Find adoptable pets near you!</p>\r\n                    </div>\r\n                </Container>\r\n            </Jumbotron>\r\n            <Row >\r\n                <Col className=\"d-flex justify-content-center\">\r\n                    <SearchBar />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col className=\"d-flex justify-content-center\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Home;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\PetDetail.js",["171","172","173","174"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux' \r\nimport pf from \"../petfinder\";\r\nimport SearchBar from './SearchBar';\r\nimport { favorite, unfavorite } from '../utils/manageFavoritePet';\r\nimport {Jumbotron, Container, Card, Button, Row, Col, ButtonGroup} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as regularHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport { faHeart as solidHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEnvelope, faMapMarker, faPhoneSquare } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\n\r\nconst PetDetail = ({user, location, favPets}) => {\r\n    const [result, setResult] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const params = new URLSearchParams(location.search);\r\n    const [like, setLike] = useState(favPets.has(parseInt(params.get(\"id\"))));\r\n    const [petInfo, setPetInfo] = useState({id: params.get(\"id\"),\r\n                                            name: params.get(\"name\"),\r\n                                            gender: params.get(\"gender\"),\r\n                                            age: params.get(\"age\"),\r\n                                            image: params.get(\"image\"),\r\n                                            characteristics: \"\"});\r\n    const getSingleResult = () => {\r\n        setLoading(true);\r\n        console.log(\"my id\", petInfo.id);\r\n        pf.animal.show(petInfo.id).then(resp => {\r\n            // Do something with resp.data.animals\r\n            setResult(resp.data.animal);\r\n        }).catch(err => {\r\n            console.log(err)\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const handleName = () => {\r\n        if (petInfo.name !== undefined && petInfo.name.includes(\"-\")) {\r\n            var name_info = petInfo.name.split('-');\r\n            setPetInfo({...petInfo, name: name_info[0].trim(), characteristics: name_info[1].trim()});\r\n        }\r\n        // console.log(name_info, petInfo.name);\r\n    };\r\n\r\n    const toggleLike = () => {\r\n      if(like){\r\n        unfavorite(user.userData._id, petInfo.id);\r\n        setLike(false);\r\n      }else{\r\n        favorite(user.userData._id, petInfo.id);\r\n        setLike(true);\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSingleResult();\r\n        handleName();\r\n    }, []);\r\n   \r\n    const print = () => {\r\n        console.log(result)\r\n        console.log(petInfo.name, petInfo.characteristics)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                {!loading ? <>\r\n                <Row><SearchBar /></Row>\r\n                <Row>\r\n                    <Card.Img variant=\"top\" style={{height: '30em', objectFit: 'cover', borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}} src={petInfo.image} />\r\n                </Row>\r\n                <Card className=\"m-3 shadow\">\r\n                    <Row>\r\n                        <Jumbotron className=\"text-center\" style={{width: \"70em\", background: \"white\"}}>    \r\n                            <h1 onClick={print}>\r\n                                {petInfo.name}\r\n                            </h1>\r\n                            <h5>\r\n                                <span>{result.contact.address.city}, {result.contact.address.state}</span>\r\n                            </h5>\r\n                            <hr />\r\n                            <p>{petInfo.age} &bull; {petInfo.gender} &bull; {result.size} &bull; {result.color}</p>\r\n                            <Button className=\"btn btn-info\" variant=\"white\" onClick={toggleLike}>\r\n                                    <FontAwesomeIcon icon={like ? solidHeart : regularHeart } size=\"lg\"/> Favorite {petInfo.name}\r\n                            </Button>\r\n                        </Jumbotron>\r\n                    </Row>\r\n                </Card>\r\n                <Row style={{textAlign:'center', justifyContent: \"center\"}}>\r\n                    <div class=\"col-md\">\r\n                    <Card className=\"m-3 shadow\" style={{ borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}}>\r\n                        <Col style={{textAlign: 'center'}}>\r\n                            <h1>About</h1><hr/>\r\n                        </Col>\r\n                        <Card.Body className=\"d-flex flex-column\">\r\n                            <div style={{textAlign: \"left\", padding: \"5px\"}}>\r\n                                <Card.Text>\r\n                                    {(petInfo.characteristics !== \"\") ? (\r\n                                    <>\r\n                                        <b>Characteristics</b><br/>{petInfo.characteristics}\r\n                                    </>\r\n                                    ): (<></>)}\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <b>Description</b> \r\n                                    <br/>{result.description}\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <b>Breeds</b> \r\n                                    <br/>{result.breeds.primary}\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <b>Color</b> \r\n                                    <br/>{result.colors.primary}\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <b>Age</b> \r\n                                    <br/>{result.age}\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <b>Status</b> \r\n                                    <br/>{result.status}\r\n                                </Card.Text>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                    <div class=\"col-\">\r\n                        <Card className=\"m-3 shadow\" style={{ borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}}>\r\n                            <Col style={{textAlign: 'center'}}>\r\n                                <h1>Contact</h1>\r\n                            </Col>\r\n                            <Card.Body className=\"d-flex flex-column\">\r\n                                <Card.Text style={{textAlign: \"left\"}}>\r\n                                    <b><FontAwesomeIcon icon={faMapMarker} size=\"lg\"/>&nbsp;&nbsp;Location Address</b> \r\n                                    <br/>{result.contact.address.city}, {result.contact.address.state}<hr/>\r\n                                    <b><FontAwesomeIcon icon={faEnvelope} size=\"lg\"/>&nbsp;&nbsp;Email</b> \r\n                                    <br/>{result.contact.email}<hr/>\r\n                                    <b><FontAwesomeIcon icon={faPhoneSquare} size=\"lg\"/>&nbsp;&nbsp;Phone</b> \r\n                                    <br/>{result.contact.phone}<hr/>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Row></> : <>loading</>}\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PetDetail;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Search.js",["175","176","177","178"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport PetThumbnail from \"./PetThumbnail\";\r\nimport LoadingThumbnails from './LoadingThumbnails';\r\nimport SearchBar from './SearchBar';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport Paginations from \"./Pagination\";\r\nimport pf from \"../petfinder\";\r\n\r\n\r\nconst Search = ({location, favPets}) => {\r\n  const history = useHistory();\r\n  const filter = useSelector(state => state.filter);\r\n  const [results, setResults] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  //callback - setTotalPages\r\n  const getSearchResults = (callback) => {\r\n    setLoading(true);\r\n    const params = new URLSearchParams(location.search);\r\n    pf.animal.search({\r\n      type: params.get(\"type\"),\r\n      age: params.get(\"age\") === \"all\" ? null : params.get(\"age\"),\r\n      size: params.get(\"size\") === \"all\" ? null : params.get(\"size\"),\r\n      gender: params.get(\"gender\") === \"all\" ? null : params.get(\"gender\"),\r\n      location: params.get(\"location\") === \"anywhere\" ? null : params.get(\"location\"), \r\n      distance: parseInt(params.get(\"distance\")) ? parseInt(params.get(\"distance\")) : null,\r\n      page: page,\r\n      limit: 24,\r\n\r\n    }).then(resp => {\r\n      // Do something with resp.data.animals\r\n      setResults(resp.data.animals);\r\n      if(callback){\r\n        callback(resp.data.pagination.total_pages);\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n      setResults([]);\r\n    }).finally(() => {\r\n        setLoading(false);\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getSearchResults();\r\n    // console.log(\"new page\");\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    getSearchResults(setTotalPage);\r\n    console.log(results.length);\r\n    // console.log(\"new results\");\r\n  }, [location.search])\r\n\r\n\r\n  return (\r\n    <>\r\n    <Col><SearchBar /> </Col>\r\n      \r\n      <Container>\r\n        <Row className=\"flex align-content-center\">\r\n            {!loading ? (results.length > 0 ? results.map(p => \r\n              <Col key={p.id} sm=\"6\" md=\"4\">\r\n                  <PetThumbnail \r\n                    id={p.id}\r\n                    image={p.primary_photo_cropped ? p.primary_photo_cropped.full : p.photos[0]}\r\n                    name={p.name}\r\n                    age={p.age}\r\n                    gender={p.gender}\r\n                    isLiked={favPets.has(p.id)}\r\n                    p_info = {p}\r\n                    />\r\n              </Col>\r\n              ):  <h3>Sorry, no results could be found :/</h3> ) : <LoadingThumbnails count={24}/>}\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Paginations handleChange={setPage} count={totalPage} page={page}/>\r\n        </Row>\r\n        \r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserSignup.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\HigherOrderComponents\\auth.js",["179","180"],"import React, {Component} from 'react';\r\nimport { auth } from '../store/actions/user_actions';\r\nimport { addFavPet } from '../store/actions/favPet_actions';\r\nimport { connect } from 'react-redux';\r\nimport { getAllFavPets } from '../utils/manageFavoritePet';\r\nconst authentication = function(ComposedClass, reload){\r\n    class AuthenticationCheck extends Component{\r\n        state ={\r\n            loading:true\r\n        }\r\n     \r\n        componentDidMount(){\r\n            this.props.dispatch(auth()).then(() =>{\r\n                let user = this.props.user;\r\n                this.setState({loading:false});\r\n                if(!user.auth){\r\n                    if(reload){this.props.history.push('/log-in');}\r\n                } else {\r\n        \r\n                    if(reload === false){\r\n                        this.props.history.push('/admin');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        render(){\r\n            if(this.state.loading){\r\n                return <div className=\"loader\">Loading...</div>\r\n            }\r\n            return (\r\n                <ComposedClass {...this.props} user={this.props.user} favPets={this.props.favPets}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state){\r\n        return {\r\n            user:state.user,\r\n            favPets: state.favPets\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenticationCheck);\r\n}\r\n\r\nexport default authentication;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\Admin\\index.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\users_reducer.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\favPets_reducer.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\reducers\\filters_reducer.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Users\\UserUpdate.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\FavoritePetHolder.js",["181","182","183","184"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PetThumbnail from \"./PetThumbnail\";\r\nimport LoadingThumbnails from \"./LoadingThumbnails\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport pf from \"../petfinder\";\r\n\r\nconst FavoritePetHolder = ({ setActive }) => {\r\n  const favPets = useSelector((state) => state.favPets);\r\n  const [results, setResults] = useState([]);\r\n\r\n\r\n  const getResults = () => {\r\n    let favPetArray = [...favPets];\r\n    let tempRes = [];\r\n    favPetArray.forEach((petid) => {\r\n      pf.animal\r\n        .show(petid)\r\n        .then((resp) => {\r\n          tempRes.push(resp.data.animal);\r\n        })\r\n        .catch(err =>{\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setActive([true, false]);\r\n        });\r\n    });\r\n    console.log(tempRes);\r\n    setResults(tempRes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getResults();\r\n    console.log(results);\r\n    console.log(results.length > 0);\r\n  }, [favPets]);\r\n\r\n  return (\r\n    <div>\r\n      <Row\r\n        style={{ justifyContent: \"center\" }}\r\n        className=\"flex align-content-center\"\r\n      >\r\n        {results.length === favPets.size ? (\r\n          results.map((p) => (\r\n            <Col key={p.id} sm=\"6\" md=\"4\">\r\n              <PetThumbnail\r\n                id={p.id}\r\n                image={\r\n                  p.primary_photo_cropped\r\n                    ? p.primary_photo_cropped.full\r\n                    : p.photos[0]\r\n                }\r\n                name={p.name}\r\n                age={p.age}\r\n                gender={p.gender}\r\n                isLiked={favPets.has(p.id)}\r\n                p_info={p}\r\n              />\r\n            </Col>\r\n          ))\r\n        ) : (\r\n          <h3>You have no favorite pets</h3>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritePetHolder;\r\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Pagination.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\LoadingThumbnails.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\actions\\user_actions.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\actions\\favPet_actions.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\PetThumbnail.js",["185","186","187","188","189"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { favorite, unfavorite } from '../utils/manageFavoritePet';\r\nimport { addFavPet, deleteFavPet } from '../store/actions/favPet_actions';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Button, Row, Col, ButtonGroup} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as regularHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport { faHeart as solidHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nconst PetThumbnail = props => {\r\n    const user = useSelector(state => state.user);\r\n    const [like, setLike] = useState(props.isLiked);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n   \r\n    const toggleLike = () => {\r\n      if(like){\r\n        unfavorite(user.userData._id, props.id);\r\n        dispatch(deleteFavPet(props.id));\r\n        setLike(false);\r\n      }else{\r\n        favorite(user.userData._id, props.id);\r\n        dispatch(addFavPet(props.id));\r\n        setLike(true);\r\n      }\r\n    };\r\n\r\n    const routeChange = () => {\r\n      console.log(props.p_info);\r\n      let path = `/pageDetail/?id=${props.id}&name=${props.name}&age=${props.age}&gender=${props.gender}&image=${props.image}`; \r\n      history.push(path);\r\n    };\r\n\r\n    return(\r\n      <Card className=\"m-3 shadow\" style={{ width: '27rem', height: '29em', borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}}>\r\n        <Card.Img variant=\"top\" style={{height: '18em', objectFit: 'cover', borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}} src={props.image} />\r\n          <Card.Body className=\"d-flex flex-column\">\r\n            <Card.Text className=\"text-center\">\r\n              <b>{props.name || <Skeleton />}</b>\r\n              <br/>{props.age } | {props.gender}\r\n            </Card.Text>\r\n            <ButtonGroup className=\"mt-auto\">\r\n              {user.auth ? <Button variant=\"light\" onClick={toggleLike}>\r\n                <FontAwesomeIcon icon={like ? solidHeart : regularHeart } size=\"lg\"/>\r\n                </Button>: <></>}\r\n              <Button  onClick={routeChange} >Check Me Out!</Button>\r\n            </ButtonGroup>\r\n          </Card.Body>\r\n      </Card>\r\n    );\r\n};\r\n\r\nexport default PetThumbnail;\r\n\r\n\r\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\utils\\manageFavoritePet.js",["190","191","192"],"import {addFavPet, deleteFavPet} from '../store/actions/favPet_actions';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst favorite = (userId, petId) => {\r\n    axios.post(`/api/favoritePets/create/${userId}/${petId}`)\r\n      .then(res => {\r\n        console.log(res);\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    \r\n};\r\n\r\nconst unfavorite = (userId, petId) => {\r\n    axios.delete(`/api/favoritePets/delete/${userId}/${petId}`)\r\n      .then(res => {\r\n        console.log(res);\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n};\r\n\r\nconst getAllFavPets = (userId, callback) => {\r\n    axios.get(`/api/favoritePets/getAllFavPets/${userId}`)\r\n    .then(res => {\r\n      const petIds = res.data.map(doc => doc.petId);\r\n      return callback(petIds);\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\nexport {favorite, unfavorite, getAllFavPets};","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\SearchBar.js",["193","194"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {setType, setGender, setSize, setAge, setDistance, setLocation} from '../store/actions/filter_actions';\r\n\r\n\r\n\r\n// Note: If user choose 'All' as the option for each filter, then the value is set to '' (emply string)\r\nconst SearchBar = props => {\r\n    const filters  = useSelector(state => state.filter);\r\n    const [valid, setValid] = useState(true);\r\n    const {type, age, size, gender, distance, location} = filters;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(type === \"0\"){\r\n            setValid(false);\r\n            return\r\n        }else{\r\n            setValid(true);\r\n        }\r\n        const query = `location=${location}&distance=${distance}&type=${type}&age=${age}&size=${size}&gender=${gender}`;\r\n        history.push(`/search/?${query}`);\r\n    };\r\n \r\n    //Only for debugging\r\n \r\n    \r\n  \r\n    return(\r\n        <>\r\n        <Form inline className=\"mt-5 justify-content-center\">\r\n            <Form.Row className=\"d-flex align-items-center\">\r\n                    <Form.Group className=\"mr-3 d-flex align-items-center\">\r\n                        <Form.Label className=\"mr-2\">Location</Form.Label>\r\n                        <Form.Control className=\"mb-0\" type=\"text\" custom placeholder=\"Enter City, State, or ZIP\" \r\n                                        name=\"location\" value={location} \r\n                                        onChange={e => dispatch(setLocation(e.target.value))}/>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Pet Type</Form.Label>\r\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={type} onChange={e => dispatch(setType(e.target.value))}>\r\n                            <option value=\"0\">Choose...</option>\r\n                            <option value=\"dog\">Dog</option>\r\n                            <option value=\"cat\">Cat</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Age</Form.Label>\r\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={age} onChange={e => dispatch(setAge(e.target.value))}>\r\n                            <option value=\"all\">All</option>\r\n                            <option value={type === \"cat\" ? \"kitten\" : \"puppy\"}>{type === \"cat\" ? \"Kitten\" : \"Puppy\"}</option>\r\n                            <option value=\"young\">Young</option>\r\n                            <option value=\"adult\">Adult</option>\r\n                            <option value=\"senior\">Senior</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Size</Form.Label>\r\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={size} onChange={e => dispatch(setSize(e.target.value))}>\r\n                            <option value=\"all\">All</option>\r\n                            <option value=\"small\">Small</option>\r\n                            <option value=\"medium\">Medium</option>\r\n                            <option value=\"large\">Large</option>\r\n                            <option value=\"xlarge\">Extra Large</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Gender</Form.Label>\r\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={gender} onChange={e => dispatch(setGender(e.target.value))}>\r\n                            <option value=\"all\">All</option>\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Distance</Form.Label>\r\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={distance} onChange={e => dispatch(setDistance(e.target.value))}>\r\n                            <option value=\"anywhere\">Anywhere</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"50\">50</option>\r\n                            <option value=\"100\">100</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                <div className=\"p-3\">\r\n                    <Button className=\"mr-3 mb-0\" variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n            </Form.Row>\r\n            {valid ? null : <div className=\"error-label\">For 'Pet Type', please choose either 'Dog' or 'Cat'</div>}\r\n        </Form>\r\n       \r\n    </>\r\n   \r\n    );\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\petfinder.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Header\\Header.js",["195"],"import { React, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport MainNav from \"./sidenav\";\r\nimport { FilterNone } from \"@material-ui/icons\";\r\n\r\nconst Header = () => {\r\n  const [mainNav, setMainNav] = useState(false);\r\n\r\n  const ShowNav = () => {\r\n    setMainNav(true);\r\n  };\r\n\r\n  const hideNav = () => {\r\n    setMainNav(false);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"row d-flex align-items-center\" style={{backgroundColor: \"#219bad\"}}>\r\n        <div className=\"open-nav\">\r\n          <FontAwesomeIcon\r\n            className=\"bars\"\r\n            icon={faBars}\r\n            onClick={() => {\r\n              ShowNav(true);\r\n            }}\r\n            style={{\r\n              color: \"white\",\r\n              padding: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            size=\"3x\"\r\n          />\r\n        </div>\r\n        <MainNav showNav={mainNav} onHideNav={() => hideNav(false)} />\r\n        <Link style={{ textDecoration: \"None\", color: \"white\" }} to=\"/\">\r\n          Pet Haven\r\n        </Link>\r\n      </div>\r\n      \r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\types.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\store\\actions\\filter_actions.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Header\\sidenav.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\Header\\NavItems.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven\\client\\src\\components\\RouteLinks\\RouteLinks.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":13},{"ruleId":"200","severity":1,"message":"204","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"200","severity":1,"message":"205","line":11,"column":10,"nodeType":"202","messageId":"203","endLine":11,"endColumn":21},{"ruleId":"200","severity":1,"message":"206","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":20},{"ruleId":"200","severity":1,"message":"207","line":12,"column":10,"nodeType":"202","messageId":"203","endLine":12,"endColumn":17},{"ruleId":"200","severity":1,"message":"208","line":12,"column":19,"nodeType":"202","messageId":"203","endLine":12,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":16,"column":6,"nodeType":"211","endLine":16,"endColumn":8,"suggestions":"212"},{"ruleId":"200","severity":1,"message":"213","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"200","severity":1,"message":"214","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"209","severity":1,"message":"215","line":15,"column":7,"nodeType":"211","endLine":15,"endColumn":17,"suggestions":"216"},{"ruleId":"200","severity":1,"message":"217","line":9,"column":11,"nodeType":"202","messageId":"203","endLine":9,"endColumn":18},{"ruleId":"209","severity":1,"message":"218","line":26,"column":8,"nodeType":"211","endLine":26,"endColumn":10,"suggestions":"219"},{"ruleId":"200","severity":1,"message":"220","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"209","severity":1,"message":"221","line":33,"column":8,"nodeType":"211","endLine":33,"endColumn":19,"suggestions":"222"},{"ruleId":"200","severity":1,"message":"223","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":21},{"ruleId":"200","severity":1,"message":"205","line":2,"column":23,"nodeType":"202","messageId":"203","endLine":2,"endColumn":34},{"ruleId":"200","severity":1,"message":"224","line":6,"column":55,"nodeType":"202","messageId":"203","endLine":6,"endColumn":66},{"ruleId":"209","severity":1,"message":"225","line":58,"column":8,"nodeType":"211","endLine":58,"endColumn":10,"suggestions":"226"},{"ruleId":"200","severity":1,"message":"217","line":13,"column":9,"nodeType":"202","messageId":"203","endLine":13,"endColumn":16},{"ruleId":"200","severity":1,"message":"227","line":14,"column":9,"nodeType":"202","messageId":"203","endLine":14,"endColumn":15},{"ruleId":"209","severity":1,"message":"228","line":51,"column":6,"nodeType":"211","endLine":51,"endColumn":12,"suggestions":"229"},{"ruleId":"209","severity":1,"message":"230","line":58,"column":6,"nodeType":"211","endLine":58,"endColumn":23,"suggestions":"231"},{"ruleId":"200","severity":1,"message":"232","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":19},{"ruleId":"200","severity":1,"message":"233","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":23},{"ruleId":"200","severity":1,"message":"234","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":25},{"ruleId":"200","severity":1,"message":"214","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":16},{"ruleId":"200","severity":1,"message":"235","line":5,"column":18,"nodeType":"202","messageId":"203","endLine":5,"endColumn":27},{"ruleId":"209","severity":1,"message":"236","line":37,"column":6,"nodeType":"211","endLine":37,"endColumn":15,"suggestions":"237"},{"ruleId":"200","severity":1,"message":"238","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"239","line":1,"column":38,"nodeType":"202","messageId":"203","endLine":1,"endColumn":48},{"ruleId":"200","severity":1,"message":"201","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":13},{"ruleId":"200","severity":1,"message":"240","line":9,"column":17,"nodeType":"202","messageId":"203","endLine":9,"endColumn":20},{"ruleId":"200","severity":1,"message":"241","line":9,"column":22,"nodeType":"202","messageId":"203","endLine":9,"endColumn":25},{"ruleId":"200","severity":1,"message":"232","line":1,"column":9,"nodeType":"202","messageId":"203","endLine":1,"endColumn":18},{"ruleId":"200","severity":1,"message":"242","line":1,"column":20,"nodeType":"202","messageId":"203","endLine":1,"endColumn":32},{"ruleId":"200","severity":1,"message":"223","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":21},{"ruleId":"200","severity":1,"message":"238","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"241","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":11},{"ruleId":"200","severity":1,"message":"243","line":6,"column":10,"nodeType":"202","messageId":"203","endLine":6,"endColumn":20},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'useSelector' is defined but never used.","'useCookies' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["246"],"'Link' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'favPets'. Either include it or remove the dependency array.",["247"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.user.auth' and 'props.user.userData.role'. Either include them or remove the dependency array.",["248"],"'PetThumbnail' is defined but never used.","React Hook useEffect has a missing dependency: 'populateInitialFavPets'. Either include it or remove the dependency array.",["249"],"'useDispatch' is defined but never used.","'ButtonGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleResult' and 'handleName'. Either include them or remove the dependency array.",["250"],"'filter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSearchResults'. Either include it or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'getSearchResults' and 'results.length'. Either include them or remove the dependency array.",["252"],"'addFavPet' is defined but never used.","'getAllFavPets' is defined but never used.","'LoadingThumbnails' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'getResults' and 'results'. Either include them or remove the dependency array.",["253"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'deleteFavPet' is defined but never used.","'FilterNone' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [user]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, favPets]",{"range":"272","text":"273"},"Update the dependencies array to be: [props.user.auth, props.user.userData.role]",{"range":"274","text":"275"},"Update the dependencies array to be: [populateInitialFavPets, user.auth]",{"range":"276","text":"277"},"Update the dependencies array to be: [getSingleResult, handleName]",{"range":"278","text":"279"},"Update the dependencies array to be: [getSearchResults, page]",{"range":"280","text":"281"},"Update the dependencies array to be: [getSearchResults, location.search, results.length]",{"range":"282","text":"283"},"Update the dependencies array to be: [favPets, getResults, results]",{"range":"284","text":"285"},[655,657],"[user]",[540,550],"[dispatch, favPets]",[662,664],"[props.user.auth, props.user.userData.role]",[1185,1196],"[populateInitialFavPets, user.auth]",[2407,2409],"[getSingleResult, handleName]",[1791,1797],"[getSearchResults, page]",[1953,1970],"[getSearchResults, location.search, results.length]",[1020,1029],"[favPets, getResults, results]"]