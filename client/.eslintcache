[{"/Users/jchen/Desktop/cs5610/pet-haven/client/src/index.js":"1","/Users/jchen/Desktop/cs5610/pet-haven/client/src/App.js":"2","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/index.js":"3","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/NavBar.js":"4","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Home.js":"5","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserLogout.js":"6","/Users/jchen/Desktop/cs5610/pet-haven/client/src/HigherOrderComponents/MainLayout.js":"7","/Users/jchen/Desktop/cs5610/pet-haven/client/src/HigherOrderComponents/auth.js":"8","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Search.js":"9","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/UserProfile.js":"10","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserLogin.js":"11","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/Admin/EditUsers.js":"12","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserSignup.js":"13","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/Admin/index.js":"14","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/users_reducer.js":"15","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/favPets_reducer.js":"16","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/filters_reducer.js":"17","/Users/jchen/Desktop/cs5610/pet-haven/client/src/petfinder.js":"18","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/PetThumbnail.js":"19","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Pagination.js":"20","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/LoadingThumbnails.js":"21","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/actions/user_actions.js":"22","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Header/Header.js":"23","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/actions/favPet_actions.js":"24","/Users/jchen/Desktop/cs5610/pet-haven/client/src/utils/manageFavoritePet.js":"25","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/SearchBar.js":"26","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserUpdate.js":"27","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/types.js":"28","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Header/sidenav.js":"29","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/actions/filter_actions.js":"30","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Header/NavItems.js":"31","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/RouteLinks/RouteLinks.js":"32","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/PetDetail.js":"33","/Users/jchen/Desktop/cs5610/pet-haven/client/src/serviceWorker.js":"34"},{"size":824,"mtime":1607997911241,"results":"35","hashOfConfig":"36"},{"size":1887,"mtime":1607996421465,"results":"37","hashOfConfig":"36"},{"size":337,"mtime":1607997886828,"results":"38","hashOfConfig":"36"},{"size":903,"mtime":1607576957107,"results":"39","hashOfConfig":"36"},{"size":1394,"mtime":1607996421468,"results":"40","hashOfConfig":"36"},{"size":913,"mtime":1607825450697,"results":"41","hashOfConfig":"36"},{"size":217,"mtime":1607571400182,"results":"42","hashOfConfig":"36"},{"size":1403,"mtime":1607996421466,"results":"43","hashOfConfig":"36"},{"size":2861,"mtime":1607996421470,"results":"44","hashOfConfig":"36"},{"size":2907,"mtime":1607922135639,"results":"45","hashOfConfig":"36"},{"size":3564,"mtime":1607906806812,"results":"46","hashOfConfig":"36"},{"size":3021,"mtime":1607918909203,"results":"47","hashOfConfig":"36"},{"size":11753,"mtime":1607922135639,"results":"48","hashOfConfig":"36"},{"size":137,"mtime":1607571400233,"results":"49","hashOfConfig":"36"},{"size":937,"mtime":1607922135641,"results":"50","hashOfConfig":"36"},{"size":511,"mtime":1607918909204,"results":"51","hashOfConfig":"36"},{"size":888,"mtime":1607748072859,"results":"52","hashOfConfig":"36"},{"size":403,"mtime":1607996421471,"results":"53","hashOfConfig":"36"},{"size":2391,"mtime":1607996421470,"results":"54","hashOfConfig":"36"},{"size":708,"mtime":1607825450694,"results":"55","hashOfConfig":"36"},{"size":1206,"mtime":1607825450694,"results":"56","hashOfConfig":"36"},{"size":1939,"mtime":1607922135641,"results":"57","hashOfConfig":"36"},{"size":1055,"mtime":1607571400211,"results":"58","hashOfConfig":"36"},{"size":267,"mtime":1607917959178,"results":"59","hashOfConfig":"36"},{"size":884,"mtime":1607918909205,"results":"60","hashOfConfig":"36"},{"size":5355,"mtime":1607918909202,"results":"61","hashOfConfig":"36"},{"size":10620,"mtime":1607922135640,"results":"62","hashOfConfig":"36"},{"size":559,"mtime":1607922135642,"results":"63","hashOfConfig":"36"},{"size":410,"mtime":1607571400214,"results":"64","hashOfConfig":"36"},{"size":824,"mtime":1607571400250,"results":"65","hashOfConfig":"36"},{"size":1341,"mtime":1607918909199,"results":"66","hashOfConfig":"36"},{"size":1425,"mtime":1607918909201,"results":"67","hashOfConfig":"36"},{"size":7187,"mtime":1607996421469,"results":"68","hashOfConfig":"36"},{"size":5086,"mtime":1607997781268,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ex3qjs",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/jchen/Desktop/cs5610/pet-haven/client/src/index.js",[],["153","154"],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/App.js",["155","156"],"import React from \"react\";\nimport Home from \"./components/Home\";\nimport Search from \"./components/Search\";\nimport NavBar from \"./components/NavBar\";\nimport UserLogin from \"./components/Users/UserLogin\";\nimport UserSignup from \"./components/Users/UserSignup\";\nimport UserProfile from \"./components/UserProfile\";\nimport Admin from \"./components/Users/Admin\";\nimport UserLogout from \"./components/Users/UserLogout\";\nimport { useSelector } from \"react-redux\";\nimport EditUsers from \"./components/Users/Admin/EditUsers\";\nimport PetDetail from \"./components/PetDetail\";\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport \"./normalize.css\";\nimport \"./skeleton.css\";\n\n// Higher Order Component so all routes will use same layout\nimport MainLayout from \"./HigherOrderComponents/MainLayout\";\nimport Auth from \"./HigherOrderComponents/auth\";\n\n\nconst App = () => {\n  const history = createBrowserHistory();\n\n  return (\n    <>\n      <BrowserRouter history={history}>\n        <MainLayout>\n          {/* <NavBar /> */}\n          <Switch>\n            <Route path=\"/admin\" component={Auth(Admin, true)} />\n            <Route path=\"/logout\" component={Auth(UserLogout, true)} />\n            <Route path=\"/sign-up\" component={Auth(UserSignup, false)} />\n            <Route path=\"/log-in\" component={Auth(UserLogin, false)} />\n            <Route path=\"/profile\" component={Auth(UserProfile, true)} />\n            <Route path=\"/search/pageDetail\" component={Auth(PetDetail)} />\n            <Route path=\"/search\" component={Auth(Search)} />\n            <Route path=\"/manage-users\" component={Auth(EditUsers)}/>\n            <Route exact path=\"/\" component={Auth(Home)} />\n          </Switch>\n        </MainLayout>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/index.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/NavBar.js",["157","158"],"import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavLink from 'react-bootstrap/NavLink';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nconst NavBar = () => {\n    //Todo: \n    // change href to correct routes\n    return(\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/home\">Pet Haven</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link><NavLink to=\"./\" />Home</Nav.Link>\n                    <NavLink to=\"#my-account\">MyAccount</NavLink> \n                </Nav>\n                <Nav>\n                <Nav.Link><NavLink to=\"/sign-up\">Sign Up</NavLink></Nav.Link>\n                    <NavLink to=\"/log-in\">Log In</NavLink>\n                </Nav>\n            </Navbar>\n        </>\n    );\n};\n\nexport default NavBar;\n\n","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Home.js",["159","160"],"import React, { useEffect } from 'react';\nimport PetThumbnail from './PetThumbnail';\nimport SearchBar from './SearchBar';\nimport { getAllFavPets } from '../utils/manageFavoritePet';\nimport { useDispatch } from 'react-redux';\nimport { addFavPet } from '../store/actions/favPet_actions';\nimport {Container, Jumbotron, Row, Col} from 'react-bootstrap';\n\nconst Home = ({user, favPets}) => {\n    const dispatch = useDispatch();\n    const populateInitialFavPets = () => {\n    // Populate initial favPets in the app if user is logged in\n        if(!user.auth) return;\n        if(favPets.size === 0){\n            getAllFavPets(user.userData._id, (petIds) => {\n                petIds.forEach(petId => {\n                    dispatch(addFavPet(petId));\n                });   \n            });     \n        }\n        console.log(\"Populated initial favPets: \");\n        console.log(favPets);\n    }\n\n    useEffect(() => {\n        populateInitialFavPets();\n    }, [user.auth]);\n    return(\n        <>\n            <Jumbotron fluid>\n                <Container>\n                    <h1>Pet Haven</h1>\n                    <p>Find adoptable pets near you!</p>\n                </Container>\n            </Jumbotron>\n            <Row >\n                <Col className=\"d-flex justify-content-center\">\n                    <SearchBar />\n                </Col>\n            </Row>\n        </>\n    );\n};\nexport default Home;","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserLogout.js",["161"],"import React, {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteFavPet } from '../../store/actions/favPet_actions';\nimport { logoutUser } from '../../store/actions/user_actions';\n\nconst Logout = (props) => {\n\n    const logout = useSelector(state => state.user);\n    const favPets = useSelector(state => state.favPets);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(logoutUser());\n        favPets.forEach(petId => dispatch(deleteFavPet(petId)));\n    },[dispatch]);\n\n    useEffect(()=>{\n        if(logout.auth === null){\n            setTimeout(()=>{\n                props.history.push('/')\n            },2000)\n        }\n    },[logout,props])\n\n\n\n    return(\n        <div className=\"logout_container\">\n            <h1>\n                Pets will miss you. Sorry to see you go :(\n            </h1>\n        </div>\n    )\n}\n\nexport default Logout;","/Users/jchen/Desktop/cs5610/pet-haven/client/src/HigherOrderComponents/MainLayout.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/HigherOrderComponents/auth.js",["162","163"],"import React, {Component} from 'react';\nimport { auth } from '../store/actions/user_actions';\nimport { addFavPet } from '../store/actions/favPet_actions';\nimport { connect } from 'react-redux';\nimport { getAllFavPets } from '../utils/manageFavoritePet';\nconst authentication = function(ComposedClass, reload){\n    class AuthenticationCheck extends Component{\n        state ={\n            loading:true\n        }\n     \n        componentDidMount(){\n            this.props.dispatch(auth()).then(() =>{\n                let user = this.props.user;\n                this.setState({loading:false});\n                if(!user.auth){\n                    if(reload){this.props.history.push('/log-in');}\n                } else {\n        \n                    if(reload === false){\n                        this.props.history.push('/admin');\n                    }\n                }\n            });\n        }\n\n        render(){\n            if(this.state.loading){\n                return <div className=\"loader\">Loading...</div>\n            }\n            return (\n                <ComposedClass {...this.props} user={this.props.user} favPets={this.props.favPets}/>\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        return {\n            user:state.user,\n            favPets: state.favPets\n        }\n    }\n\n    return connect(mapStateToProps)(AuthenticationCheck);\n}\n\nexport default authentication;","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Search.js",["164","165","166","167"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\nimport PetThumbnail from \"./PetThumbnail\";\nimport LoadingThumbnails from './LoadingThumbnails';\nimport SearchBar from './SearchBar';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport Paginations from \"./Pagination\";\nimport pf from \"../petfinder\";\n\nconst Search = ({location, favPets}) => {\n  const history = useHistory();\n  const filter = useSelector(state => state.filter);\n  const [results, setResults] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  //callback - setTotalPages\n  const getSearchResults = (callback) => {\n    setLoading(true);\n    const params = new URLSearchParams(location.search);\n    pf.animal.search({\n      type: params.get(\"type\"),\n      age: params.get(\"age\") === \"all\" ? null : params.get(\"age\"),\n      size: params.get(\"size\") === \"all\" ? null : params.get(\"size\"),\n      gender: params.get(\"gender\") === \"all\" ? null : params.get(\"gender\"),\n      location: params.get(\"location\") === \"anywhere\" ? null : params.get(\"location\"), \n      distance: parseInt(params.get(\"distance\")) ? parseInt(params.get(\"distance\")) : null,\n      page: page,\n      limit: 24,\n\n    }).then(resp => {\n      // Do something with resp.data.animals\n      setResults(resp.data.animals);\n      if(callback){\n        callback(resp.data.pagination.total_pages);\n      }\n    }).catch(err => {\n      console.log(err)\n      setResults([]);\n    }).finally(() => {\n        setLoading(false);\n    });\n  };\n\n\n  useEffect(() => {\n    getSearchResults();\n    // console.log(\"new page\");\n  }, [page]);\n\n  useEffect(() => {\n    setPage(1);\n    getSearchResults(setTotalPage);\n    console.log(results.length);\n    // console.log(\"new results\");\n  }, [location.search])\n\n\n  return (\n    <>\n      <Container>\n        <Row><SearchBar /></Row>\n        <Row className=\"flex align-content-center\">\n            {!loading ? (results.length > 0 ? results.map(p => \n              <Col key={p.id} sm=\"6\" md=\"4\">\n                <PetThumbnail \n                  id={p.id}\n                  image={p.primary_photo_cropped ? p.primary_photo_cropped.full : p.photos[0]}\n                  name={p.name}\n                  age={p.age}\n                  gender={p.gender}\n                  isLiked={favPets.has(p.id)}\n                  petData = {p}\n                  />\n              </Col>\n              ):  <h3>Sorry, no results could be found :/</h3> ) : <LoadingThumbnails count={24}/>}\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Paginations handleChange={setPage} count={totalPage} page={page}/>\n        </Row>\n        \n      </Container>\n    </>\n  );\n};\n\nexport default Search;\n","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/UserProfile.js",["168"],"import { React, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhone, faMailBulk } from \"@fortawesome/free-solid-svg-icons\";\nimport img from \"../blank-profile-picture-973460_640.png\";\nimport UserUpdate from \"./Users/UserUpdate\";\nimport { useSelector } from \"react-redux\";\n\nconst UserProfile = ({ props, location }) => {\n  const [active, setActive] = useState([true, false]);\n  let user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    console.log(user);\n  }, []);\n\n  const handleClick = (e) => {\n    let newArr = active.map((entry) => {\n      return (entry = !entry);\n    });\n    setActive(newArr);\n    console.log(active);\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <div className=\"profile-img\">\n          <img src={img} style={{ width: \"250px\" }} alt=\"\" />\n        </div>\n        <div className=\"profile-nav-info\">\n          <h3>\n            {user.userData.firstname} {user.userData.lastname}\n          </h3>\n          <div className=\"address\">\n            <p className=\"state\">\n              {user.userData.city}, {user.userData.state}\n            </p>\n            <span className=\"country\">USA, {user.userData.zipcode}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"main-body\">\n        <div className=\"left-side\">\n          <div className=\"profile-side\">\n            <p className=\"mobile-number\">\n              <FontAwesomeIcon\n                style={{ marginRight: \"5px\" }}\n                icon={faPhone}\n              ></FontAwesomeIcon>\n              {user.userData.phone}\n            </p>\n            <p className=\"email\">\n              <FontAwesomeIcon\n                style={{ marginRight: \"5px\" }}\n                icon={faMailBulk}\n              ></FontAwesomeIcon>\n              {user.userData.email}\n            </p>\n            <div className=\"user-bio\">\n              <p style={{ fontWeight: \"bold\" }}>About Me</p>\n              <p>{user.userData.about}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"right-side\">\n          <div className=\"mini-nav\">\n            <ul>\n              <li\n                onClick={active[0] ? null : handleClick}\n                className={`${active[0] ? \"active\" : \"\"} fav-pets`}\n              >\n                Your Favorited Pets\n              </li>\n              <li\n                onClick={active[1] ? null : handleClick}\n                className={`${active[1] ? \"active\" : \"\"} update-profile`}\n              >\n                Update Profile\n              </li>\n            </ul>\n          </div>\n          <div\n            className={`${\n              active[1] ? \"displayed\" : \"not-displayed\"\n            } update-form`}\n          >\n            <UserUpdate />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserLogin.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/Admin/EditUsers.js",["169","170"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, Row } from 'react-bootstrap';\n\n\nconst EditUsers = props => {\n    const [users, setUsers] = useState([]);\n    const history = useHistory();\n    const getAllUsers = () => {\n        axios.get('/api/users/all')\n        .then(res => {\n            setUsers(res.data);\n        }).catch(err => {\n            console.log(err);\n\n        }).finally(() => {\n\n        })\n    }\n\n    useEffect(() => {\n        if(props.user.auth && props.user.userData.role === 1){\n            getAllUsers();\n        }\n    }, []);\n\n    return(\n        <div className=\"row py-5\">\n        <div className=\"col-lg-10 mx-auto\">\n            <div className=\"card rounded shadow border-0\">\n                <div className=\"card-body bg-white rounded\">\n                    <div className=\"table-responsive\">\n                        <table\n                            id=\"example\"\n                            className=\"table table-striped table-bordered\">\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th>UserID</th>\n                                    <th>User Email</th>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users.map(user => {\n                                    // console.log(Date.parse(url.date));\n                                    return (\n                                        <tr key={user._id}>\n                                            <td>{user._id}</td>\n                                            <td>{user.email}</td>\n                                            <td>{user.firstname}</td>\n                                            <td>{user.lastname}</td>\n                                            <td>\n                                                <Row className=\"d-flex justify-content-center\">\n                                                    <Button\n                                                        variant=\"danger\"\n                                                        size=\"lg\"\n                                                        onClick={()=>{console.log(\"click\")}}>\n                                                        Remove\n                                                    </Button>\n                                                </Row>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n\n}\n\nexport default EditUsers;","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserSignup.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/Admin/index.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/users_reducer.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/favPets_reducer.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/reducers/filters_reducer.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/petfinder.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/PetThumbnail.js",["171","172","173","174"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { favorite, unfavorite } from '../utils/manageFavoritePet';\nimport { addFavPet, deleteFavPet } from '../store/actions/favPet_actions';\nimport Card from 'react-bootstrap/Card';\nimport {Button, Row, Col, ButtonGroup} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as regularHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as solidHeart } from '@fortawesome/free-solid-svg-icons';\nimport Skeleton from 'react-loading-skeleton';\n\nconst PetThumbnail = props => {\n    const user = useSelector(state => state.user);\n    const [like, setLike] = useState(props.isLiked);\n    const dispatch = useDispatch();\n    const toggleLike = () => {\n      if(like){\n        unfavorite(user.userData._id, props.id);\n        dispatch(deleteFavPet(props.id));\n        setLike(false);\n      }else{\n        favorite(user.userData._id, props.id);\n        dispatch(addFavPet(props.id));\n        setLike(true);\n      }\n    };\n\n    return(\n      <Card className=\"m-3 shadow\" style={{ width: '27rem', height: '29em', borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}}>\n        <Card.Img variant=\"top\" style={{height: '18em', objectFit: 'cover', borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}} src={props.image} />\n          <Card.Body className=\"d-flex flex-column\">\n            <Card.Text className=\"text-center\">\n              <b>{props.name || <Skeleton />}</b>\n              <br/>{props.age } | {props.gender}\n            </Card.Text>\n            <ButtonGroup className=\"mt-auto\">\n              {user.auth ? <Button variant=\"light\" onClick={toggleLike}>\n                <FontAwesomeIcon icon={like ? solidHeart : regularHeart } size=\"lg\"/>\n                </Button> : <></>}\n              <Button  variant=\"primary\">Check Me Out!</Button>\n            </ButtonGroup>\n          </Card.Body>\n      </Card>\n    );\n};\n\nexport default PetThumbnail;\n\n\n","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Pagination.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/LoadingThumbnails.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/actions/user_actions.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Header/Header.js",["175"],"import { React, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport MainNav from \"./sidenav\";\nimport { FilterNone } from \"@material-ui/icons\";\n\nconst Header = () => {\n  const [mainNav, setMainNav] = useState(false);\n\n  const ShowNav = () => {\n    setMainNav(true);\n  };\n\n  const hideNav = () => {\n    setMainNav(false);\n  };\n\n  return (\n    <header>\n      <div className=\"open-nav\">\n        <FontAwesomeIcon\n          className=\"bars\"\n          icon={faBars}\n          onClick={() => {\n            ShowNav(true);\n          }}\n          style={{\n            color: \"black\",\n            padding: \"10px\",\n            cursor: \"pointer\",\n          }}\n          size=\"3x\"\n        />\n      </div>\n      <MainNav showNav={mainNav} onHideNav={() => hideNav(false)} />\n      <Link style={{ textDecoration: \"None\", color: \"purple\" }} to=\"/\">\n        Pet Haven\n      </Link>\n    </header>\n  );\n};\nexport default Header;\n","/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/actions/favPet_actions.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/utils/manageFavoritePet.js",["176","177","178"],"import {addFavPet, deleteFavPet} from '../store/actions/favPet_actions';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\n\nconst favorite = (userId, petId) => {\n    axios.post(`/api/favoritePets/create/${userId}/${petId}`)\n      .then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    \n};\n\nconst unfavorite = (userId, petId) => {\n    axios.delete(`/api/favoritePets/delete/${userId}/${petId}`)\n      .then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n};\n\nconst getAllFavPets = (userId, callback) => {\n    axios.get(`/api/favoritePets/getAllFavPets/${userId}`)\n    .then(res => {\n      const petIds = res.data.map(doc => doc.petId);\n      return callback(petIds);\n    }).catch(err => {\n      console.log(err);\n    });\n}\nexport {favorite, unfavorite, getAllFavPets};","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/SearchBar.js",["179","180"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport {setType, setGender, setSize, setAge, setDistance, setLocation} from '../store/actions/filter_actions';\n\n\n\n// Note: If user choose 'All' as the option for each filter, then the value is set to '' (emply string)\nconst SearchBar = props => {\n    const filters  = useSelector(state => state.filter);\n    const [valid, setValid] = useState(true);\n    const {type, age, size, gender, distance, location} = filters;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(type === \"0\"){\n            setValid(false);\n            return\n        }else{\n            setValid(true);\n        }\n        const query = `location=${location}&distance=${distance}&type=${type}&age=${age}&size=${size}&gender=${gender}`;\n        history.push(`/search/?${query}`);\n    };\n \n    //Only for debugging\n \n    \n  \n    return(\n        <>\n        <Form inline>\n            <Form.Row className=\"d-flex align-items-center\">\n                    <Form.Group className=\"mr-3 d-flex align-items-center\">\n                        <Form.Label className=\"mr-2\">Location</Form.Label>\n                        <Form.Control className=\"mb-0\" type=\"text\" custom placeholder=\"Enter City, State, or ZIP\" \n                                        name=\"location\" value={location} \n                                        onChange={e => dispatch(setLocation(e.target.value))}/>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Pet Type</Form.Label>\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={type} onChange={e => dispatch(setType(e.target.value))}>\n                            <option value=\"0\">Choose...</option>\n                            <option value=\"dog\">Dog</option>\n                            <option value=\"cat\">Cat</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Age</Form.Label>\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={age} onChange={e => dispatch(setAge(e.target.value))}>\n                            <option value=\"all\">All</option>\n                            <option value={type === \"cat\" ? \"kitten\" : \"puppy\"}>{type === \"cat\" ? \"Kitten\" : \"Puppy\"}</option>\n                            <option value=\"young\">Young</option>\n                            <option value=\"adult\">Adult</option>\n                            <option value=\"senior\">Senior</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Size</Form.Label>\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={size} onChange={e => dispatch(setSize(e.target.value))}>\n                            <option value=\"all\">All</option>\n                            <option value=\"small\">Small</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"large\">Large</option>\n                            <option value=\"xlarge\">Extra Large</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Gender</Form.Label>\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={gender} onChange={e => dispatch(setGender(e.target.value))}>\n                            <option value=\"all\">All</option>\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Distance</Form.Label>\n                        <Form.Control className=\"mb-0\" custom size=\"lg\" as=\"select\" defaultValue={distance} onChange={e => dispatch(setDistance(e.target.value))}>\n                            <option value=\"anywhere\">Anywhere</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"25\">25</option>\n                            <option value=\"50\">50</option>\n                            <option value=\"100\">100</option>\n                        </Form.Control>\n                    </Form.Group>\n                <div className=\"p-3\">\n                    <Button className=\"mr-3 mb-0\" variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n                        Search\n                    </Button>\n                </div>\n                \n            </Form.Row>\n        </Form>\n        {valid ? null : <div className=\"error-label\">For 'Pet Type', please choose either 'Dog' or 'Cat'</div>}\n\n    </>\n   \n    );\n}\n\nexport default SearchBar;","/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Users/UserUpdate.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/types.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Header/sidenav.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/store/actions/filter_actions.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/Header/NavItems.js",[],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/RouteLinks/RouteLinks.js",[],["181","182"],"/Users/jchen/Desktop/cs5610/pet-haven/client/src/components/PetDetail.js",["183","184","185","186"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector} from 'react-redux' \nimport pf from \"../petfinder\";\nimport SearchBar from './SearchBar';\nimport { favorite, unfavorite } from '../utils/manageFavoritePet';\nimport {Jumbotron, Container, Card, Button, Row, Col, ButtonGroup} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as regularHeart } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as solidHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faEnvelope, faMapMarker, faPhoneSquare } from \"@fortawesome/free-solid-svg-icons\"\n\n\nconst PetDetail = ({user, location, favPets}) => {\n    const [result, setResult] = useState();\n    const [loading, setLoading] = useState(true);\n    const params = new URLSearchParams(location.search);\n    const [like, setLike] = useState(favPets.has(parseInt(params.get(\"id\"))));\n    const [petInfo, setPetInfo] = useState({id: params.get(\"id\"),\n                                            name: params.get(\"name\"),\n                                            gender: params.get(\"gender\"),\n                                            age: params.get(\"age\"),\n                                            image: params.get(\"image\"),\n                                            characteristics: \"\"});\n    const getSingleResult = () => {\n        setLoading(true);\n        console.log(\"my id\", petInfo.id);\n        pf.animal.show(petInfo.id).then(resp => {\n            // Do something with resp.data.animals\n            setResult(resp.data.animal);\n        }).catch(err => {\n            console.log(err)\n        }).finally(() => {\n            setLoading(false);\n        });\n    };\n\n    const handleName = () => {\n        if (petInfo.name !== undefined && petInfo.name.includes(\"-\")) {\n            var name_info = petInfo.name.split('-');\n            setPetInfo({...petInfo, name: name_info[0].trim(), characteristics: name_info[1].trim()});\n        }\n        // console.log(name_info, petInfo.name);\n    };\n\n    const toggleLike = () => {\n      if(like){\n        unfavorite(user.userData._id, petInfo.id);\n        setLike(false);\n      }else{\n        favorite(user.userData._id, petInfo.id);\n        setLike(true);\n      }\n    };\n\n    useEffect(() => {\n        getSingleResult();\n        handleName();\n    }, []);\n   \n    const print = () => {\n        console.log(result)\n        console.log(petInfo.name, petInfo.characteristics)\n    };\n\n    return (\n        <>\n            <Container>\n                {!loading ? <>\n                <Row><SearchBar /></Row>\n                <Row>\n                    <Card.Img variant=\"top\" style={{height: '30em', objectFit: 'cover', borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}} src={petInfo.image} />\n                </Row>\n                <Card className=\"m-3 shadow\">\n                    <Row>\n                        <Jumbotron className=\"text-center\" style={{width: \"70em\", background: \"white\"}}>    \n                            <h1 onClick={print}>\n                                {petInfo.name}\n                            </h1>\n                            <h5>\n                                <span>{result.contact.address.city}, {result.contact.address.state}</span>\n                            </h5>\n                            <hr></hr>\n                            <p>{petInfo.age} &bull; {petInfo.gender} &bull; {result.size} &bull; {result.color}</p>\n                            <Button className=\"btn btn-info\" variant=\"white\" onClick={toggleLike}>\n                                    <FontAwesomeIcon icon={like ? solidHeart : regularHeart } size=\"lg\"/> Favorite {petInfo.name}\n                            </Button>\n                        </Jumbotron>\n                    </Row>\n                </Card>\n                <Row style={{textAlign:'center', justifyContent: \"center\"}}>\n                    <div class=\"col-md\">\n                    <Card className=\"m-3 shadow\" style={{ borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}}>\n                        <Col style={{textAlign: 'center'}}>\n                            <h1>About</h1><hr/>\n                        </Col>\n                        <Card.Body className=\"d-flex flex-column\">\n                            <div style={{textAlign: \"left\", padding: \"5px\"}}>\n                                <Card.Text>\n                                    {(petInfo.characteristics !== \"\") ? (\n                                    <div><b>Characteristics</b><br/>{petInfo.characteristics}</div> \n                                    ): (<div></div>)}\n                                </Card.Text>\n                                <Card.Text>\n                                    <b>Description</b> \n                                    <br/>{result.description}\n                                </Card.Text>\n                                <Card.Text>\n                                    <b>Breeds</b> \n                                    <br/>{result.breeds.primary}\n                                </Card.Text>\n                                <Card.Text>\n                                    <b>Color</b> \n                                    <br/>{result.colors.primary}\n                                </Card.Text>\n                                <Card.Text>\n                                    <b>Age</b> \n                                    <br/>{result.age}\n                                </Card.Text>\n                                <Card.Text>\n                                    <b>Status</b> \n                                    <br/>{result.status}\n                                </Card.Text>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                    </div>\n                    <div class=\"col-\">\n                        <Card className=\"m-3 shadow\" style={{ borderTopLeftRadius:'0.5em', borderTopRightRadius:'0.5em'}}>\n                            <Col style={{textAlign: 'center'}}>\n                                <h1>Contact</h1>\n                            </Col>\n                            <Card.Body className=\"d-flex flex-column\">\n                                <Card.Text>\n                                    <div style={{textAlign: \"left\"}}>\n                                        <b><FontAwesomeIcon icon={faMapMarker} size=\"lg\"/>&nbsp;&nbsp;Location Address</b> \n                                        <br/>{result.contact.address.city}, {result.contact.address.state}<hr/>\n                                        <b><FontAwesomeIcon icon={faEnvelope} size=\"lg\"/>&nbsp;&nbsp;Email</b> \n                                        <br/>{result.contact.email}<hr/>\n                                        <b><FontAwesomeIcon icon={faPhoneSquare} size=\"lg\"/>&nbsp;&nbsp;Phone</b> \n                                        <br/>{result.contact.phone}<hr/>\n                                    </div>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </Row></> : <>loading</>}\n            </Container>\n        </>\n    );\n};\n\nexport default PetDetail;","/Users/jchen/Desktop/cs5610/pet-haven/client/src/serviceWorker.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":14},{"ruleId":"191","severity":1,"message":"195","line":10,"column":10,"nodeType":"193","messageId":"194","endLine":10,"endColumn":21},{"ruleId":"191","severity":1,"message":"196","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":14},{"ruleId":"191","severity":1,"message":"197","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":14},{"ruleId":"191","severity":1,"message":"198","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":27,"column":8,"nodeType":"201","endLine":27,"endColumn":19,"suggestions":"202"},{"ruleId":"199","severity":1,"message":"203","line":15,"column":7,"nodeType":"201","endLine":15,"endColumn":17,"suggestions":"204"},{"ruleId":"191","severity":1,"message":"205","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":19},{"ruleId":"191","severity":1,"message":"206","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":23},{"ruleId":"191","severity":1,"message":"207","line":12,"column":9,"nodeType":"193","messageId":"194","endLine":12,"endColumn":16},{"ruleId":"191","severity":1,"message":"208","line":13,"column":9,"nodeType":"193","messageId":"194","endLine":13,"endColumn":15},{"ruleId":"199","severity":1,"message":"209","line":50,"column":6,"nodeType":"201","endLine":50,"endColumn":12,"suggestions":"210"},{"ruleId":"199","severity":1,"message":"211","line":57,"column":6,"nodeType":"201","endLine":57,"endColumn":23,"suggestions":"212"},{"ruleId":"199","severity":1,"message":"213","line":14,"column":6,"nodeType":"201","endLine":14,"endColumn":8,"suggestions":"214"},{"ruleId":"191","severity":1,"message":"207","line":9,"column":11,"nodeType":"193","messageId":"194","endLine":9,"endColumn":18},{"ruleId":"199","severity":1,"message":"215","line":26,"column":8,"nodeType":"201","endLine":26,"endColumn":10,"suggestions":"216"},{"ruleId":"191","severity":1,"message":"217","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"218","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"219","line":7,"column":17,"nodeType":"193","messageId":"194","endLine":7,"endColumn":20},{"ruleId":"191","severity":1,"message":"220","line":7,"column":22,"nodeType":"193","messageId":"194","endLine":7,"endColumn":25},{"ruleId":"191","severity":1,"message":"221","line":6,"column":10,"nodeType":"193","messageId":"194","endLine":6,"endColumn":20},{"ruleId":"191","severity":1,"message":"205","line":1,"column":9,"nodeType":"193","messageId":"194","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"222","line":1,"column":20,"nodeType":"193","messageId":"194","endLine":1,"endColumn":32},{"ruleId":"191","severity":1,"message":"223","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"191","severity":1,"message":"217","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"220","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":11},{"ruleId":"187","replacedBy":"224"},{"ruleId":"189","replacedBy":"225"},{"ruleId":"191","severity":1,"message":"223","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":21},{"ruleId":"191","severity":1,"message":"195","line":2,"column":23,"nodeType":"193","messageId":"194","endLine":2,"endColumn":34},{"ruleId":"191","severity":1,"message":"226","line":6,"column":55,"nodeType":"193","messageId":"194","endLine":6,"endColumn":66},{"ruleId":"199","severity":1,"message":"227","line":58,"column":8,"nodeType":"201","endLine":58,"endColumn":10,"suggestions":"228"},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'PetThumbnail' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populateInitialFavPets'. Either include it or remove the dependency array.","ArrayExpression",["231"],"React Hook useEffect has a missing dependency: 'favPets'. Either include it or remove the dependency array.",["232"],"'addFavPet' is defined but never used.","'getAllFavPets' is defined but never used.","'history' is assigned a value but never used.","'filter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSearchResults'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has missing dependencies: 'getSearchResults' and 'results.length'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'props.user.auth' and 'props.user.userData.role'. Either include them or remove the dependency array.",["236"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FilterNone' is defined but never used.","'deleteFavPet' is defined but never used.","'useDispatch' is defined but never used.",["229"],["230"],"'ButtonGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleResult' and 'handleName'. Either include them or remove the dependency array.",["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [populateInitialFavPets, user.auth]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch, favPets]",{"range":"254","text":"255"},"Update the dependencies array to be: [getSearchResults, page]",{"range":"256","text":"257"},"Update the dependencies array to be: [getSearchResults, location.search, results.length]",{"range":"258","text":"259"},"Update the dependencies array to be: [user]",{"range":"260","text":"261"},"Update the dependencies array to be: [props.user.auth, props.user.userData.role]",{"range":"262","text":"263"},"Update the dependencies array to be: [getSingleResult, handleName]",{"range":"264","text":"265"},[948,959],"[populateInitialFavPets, user.auth]",[526,536],"[dispatch, favPets]",[1740,1746],"[getSearchResults, page]",[1895,1912],"[getSearchResults, location.search, results.length]",[539,541],"[user]",[637,639],"[props.user.auth, props.user.userData.role]",[2350,2352],"[getSingleResult, handleName]"]